services:
  # Gluetun - VPN Client for Docker Containers and More
  # Gluetun only for use by torrent clients + on demand lan devices.
  # Arr apps do not need VPN (not recommended), unless you have ISP/country restrictions.
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["core", "all"]
    networks:
      - t3_proxy
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    # ports:
      # - "6595:6595" # Exposing Deemix through Docker Host LAN IP
      # - "5030:5030" # Exposing slskd through Docker Host LAN IP
      # - "8081:8080" # Exposing qBittorrent through Docker Host LAN IP
      # - "8998:17442" # Exposing YoutubeDL-Material through Docker Host LAN IP
      # - 8888:8888/tcp # HTTP proxy
      # - 8388:8388/tcp # Shadowsocks
      # - 8388:8388/udp # Shadowsocks
    volumes:
      - $DOCKERDIR/appdata/gluetun:/gluetun
    environment:
      TZ: $TZ
      UPDATER_PERIOD: 24h
      # Wireguard
      VPN_SERVICE_PROVIDER: custom
      VPN_TYPE: wireguard
      WIREGUARD_ENDPOINT_IP: $WIREGUARD_ENDPOINT_IP
      WIREGUARD_ENDPOINT_PORT: $WIREGUARD_ENDPOINT_PORT
      WIREGUARD_PUBLIC_KEY: $WIREGUARD_PUBLIC_KEY
      WIREGUARD_PRIVATE_KEY: $WIREGUARD_PRIVATE_KEY
      WIREGUARD_ADDRESSES: $WIREGUARD_ADDRESSES
      VPN_PORT_FORWARDING: on
      VPN_PORT_FORWARDING_PROVIDER: protonvpn
    labels:
      - "traefik.enable=true"
      ## Deemix labels
        # HTTP Routers
      - "traefik.http.routers.deemix-rtr.entrypoints=websecure"
      - "traefik.http.routers.deemix-rtr.rule=Host(`deemix.$DOMAINNAME`)"
        # Middlewares
      - "traefik.http.routers.deemix-rtr.middlewares=chain-double-auth@file"
        # HTTP Services
      - "traefik.http.routers.deemix-rtr.service=deemix-svc"
      - "traefik.http.services.deemix-svc.loadbalancer.server.port=6595"
      ## slskd labels
        # HTTP Routers
      - "traefik.http.routers.slskd-rtr.entrypoints=websecure"
      - "traefik.http.routers.slskd-rtr.rule=Host(`slskd.$DOMAINNAME`)"
        # Middlewares
      - "traefik.http.routers.slskd-rtr.middlewares=chain-oauth@file"
        # HTTP Services
      - "traefik.http.routers.slskd-rtr.service=slskd-svc"
      - "traefik.http.services.slskd-svc.loadbalancer.server.port=5030"
      ## qBittorrent labels
        # HTTP Routers
      - "traefik.http.routers.gluetun-qbittorrent-rtr.entrypoints=websecure"
      - "traefik.http.routers.gluetun-qbittorrent-rtr.rule=Host(`qbittorrent.$DOMAINNAME`)"
        # Middlewares
      - "traefik.http.routers.gluetun-qbittorrent-rtr.middlewares=chain-oauth@file"
        # HTTP Services
      - "traefik.http.routers.gluetun-qbittorrent-rtr.service=gluetun-svc"
      - "traefik.http.services.gluetun-svc.loadbalancer.server.port=8080"
      ## YoutubeDL-Material labels
        # HTTP Routers
      - "traefik.http.routers.ytdl_material-rtr.entrypoints=websecure"
      - "traefik.http.routers.ytdl_material-rtr.rule=Host(`ytdl_material.$DOMAINNAME`)"
        # Middlewares
      - "traefik.http.routers.ytdl_material-rtr.middlewares=chain-oauth-nosniffdisabled@file"
        # HTTP Services
      - "traefik.http.routers.ytdl_material-rtr.service=ytdl_material-svc"
      - "traefik.http.services.ytdl_material-svc.loadbalancer.server.port=17442"
      # Enable Watchtower Monitoring
      - "com.centurylinklabs.watchtower.monitor-only=true"